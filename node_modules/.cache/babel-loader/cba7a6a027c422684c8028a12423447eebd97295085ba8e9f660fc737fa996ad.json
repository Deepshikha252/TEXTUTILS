{"ast":null,"code":"var _jsxFileName = \"D:\\\\TextUtils\\\\textutils-check-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode enable\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode enable\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      about: \"About TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Textform, {\n        showAlert: showAlert,\n        heading: \"Enter the text to analyze below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Alert","Navbar","Textform","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor"],"sources":["D:/TextUtils/textutils-check-react/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n\n\nexport default function App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() =>{\n      setAlert(null)\n    }, 1500)\n  }\n\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode enable\",\"success\")\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode enable\",\"success\")\n    }\n  }\n  \n  return (\n    <>\n      <Navbar title=\"TextUtils\" about=\"About TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className='container my-3'>\n        <Textform showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n      </div>\n    </>\n  );\n    \n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC;AAAA;AAG7C,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,SAAS,GAAG,CAACC,OAAO,EAAEC,IAAI,KAAI;IAClCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IAEFE,UAAU,CAAC,MAAK;MACdL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMM,UAAU,GAAG,MAAK;IACtB,IAAGT,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,SAAS,CAAC,kBAAkB,EAAC,SAAS,CAAC;IACzC,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,mBAAmB,EAAC,SAAS,CAAC;IAC1C;EACF,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,KAAK,EAAC,WAAW;MAAC,KAAK,EAAC,iBAAiB;MAAC,IAAI,EAAEJ,IAAK;MAAC,UAAU,EAAES;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE,eACvF,QAAC,KAAK;MAAC,KAAK,EAAEP;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACtB;MAAK,SAAS,EAAC,gBAAgB;MAAA,uBAC7B,QAAC,QAAQ;QAAC,SAAS,EAAEE,SAAU;QAAC,OAAO,EAAC,iCAAiC;QAAC,IAAI,EAAEJ;MAAK;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACnF;EAAA,gBACL;AAGP;AAAC,GAtCuBD,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}